{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpelaRK\\\\js_programming\\\\ReactJS\\\\urban-kravos\\\\src\\\\components\\\\new-project.component.jsx\";\nimport React, { Component } from 'react';\nimport { useParams } from 'react-router-dom';\n\nclass NewProject extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleImgChange = event => {\n      const _event$target = event.target,\n            files = _event$target.files,\n            name = _event$target.name; //za load bar, če bom rabil\n\n      this.setState({\n        loaded: 0\n      });\n      const formData = new FormData();\n      formData.append('pFile', files[0]);\n      const options = {\n        method: 'POST',\n        body: formData\n      };\n      fetch('/api/project/upload', options).then(res => {\n        return res.text();\n      }).then(data => {\n        const inputsName = name.slice(0, 4);\n        this.setState({\n          [inputsName]: data\n        });\n      });\n    };\n\n    this.handleTextChange = event => {\n      const _event$target2 = event.target,\n            value = _event$target2.value,\n            name = _event$target2.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleAddProject = () => {\n      const _this$state = this.state,\n            tittle = _this$state.tittle,\n            postBody = _this$state.postBody,\n            img1 = _this$state.img1,\n            img2 = _this$state.img2,\n            img3 = _this$state.img3,\n            gitUrl = _this$state.gitUrl;\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          tittle,\n          postBody,\n          img1,\n          img2,\n          img3,\n          gitUrl\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/api/project/add', options).then(res => {\n        console.log('RESPONSE FROM SERVER:');\n\n        if (res.status === 200) {\n          this.setState({\n            tittle: '',\n            postBody: '',\n            img1: '',\n            img2: '',\n            img3: '',\n            gitUrl: 'https://github.com/radicalb/',\n            img1fileKey: 'rKey1' + Date.now(),\n            img2fileKey: 'rKey2' + Date.now(),\n            img3fileKey: 'rKey3' + Date.now()\n          });\n          alert('Projekt uspešno dodan.');\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        alert('Error adding project please try again');\n      });\n    };\n\n    this.handleEditProject = () => {\n      const _this$state2 = this.state,\n            tittle = _this$state2.tittle,\n            postBody = _this$state2.postBody,\n            img1 = _this$state2.img1,\n            img2 = _this$state2.img2,\n            img3 = _this$state2.img3,\n            gitUrl = _this$state2.gitUrl;\n      const options = {\n        method: 'POST',\n        body: JSON.stringify({\n          tittle,\n          postBody,\n          img1,\n          img2,\n          img3,\n          gitUrl\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/api/project/update/' + this.props.match.params.id, options).then(res => {\n        console.log('RESPONSE FROM SERVER:');\n\n        if (res.status === 200) {\n          alert('Projekt uspešno posodobljen.');\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        alert('Error updating project please try again');\n      });\n    };\n\n    this.state = {\n      tittle: '',\n      postBody: '',\n      img1: '',\n      img2: '',\n      img3: '',\n      gitUrl: 'https://github.com/radicalb/',\n      img1fileKey: 'rKey1' + Date.now(),\n      img2fileKey: 'rKey2' + Date.now(),\n      img3fileKey: 'rKey3' + Date.now()\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match);\n    console.log(this.props.match.params);\n\n    if (this.props.match.params.id) {\n      fetch('/api/project/' + this.props.match.params.id).then(res => {\n        if (res.status === 200) {\n          res.json().then(data => {\n            console.log(data);\n            const _id = data._id;\n            console.log(_id);\n            this.setState({\n              tittle: data.tittle,\n              postBody: data.postBody,\n              img1: data.img1,\n              img2: data.img2,\n              img3: data.img3,\n              gitUrl: data.gitUrl\n            });\n          });\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  getNewProjectButton() {\n    return React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: this.handleAddProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Dodaj projekt\");\n  }\n\n  getEditProjectButton() {\n    return React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: this.handleEditProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Shrani spremembe\");\n  }\n\n  getCorrectButton() {\n    if (this.props.match.params.id) {\n      return this.getEditProjectButton();\n    } else {\n      return this.getNewProjectButton();\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"page-section portfolio\",\n      id: \"newProject\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"page-section-heading text-center text-uppercase text-secondary mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Dodaj projekt\"), React.createElement(\"div\", {\n      className: \"divider-custom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divider-custom-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"divider-custom-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-star\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"divider-custom-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 col-md-offset-2 text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"tittle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Title \", React.createElement(\"span\", {\n      className: \"require\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"tittle\",\n      value: this.state.tittle,\n      onChange: this.handleTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"postBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      rows: \"5\",\n      className: \"form-control\",\n      name: \"postBody\",\n      value: this.state.postBody,\n      onChange: this.handleTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"img1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Image1: \", React.createElement(\"span\", {\n      className: \"require\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"img1file\",\n      key: this.state.img1fileKey,\n      onChange: this.handleImgChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"img1\",\n      value: this.state.img1,\n      onChange: this.handleTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"img2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Image2: \", React.createElement(\"span\", {\n      className: \"require\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"img2file\",\n      key: this.state.img2fileKey,\n      onChange: this.handleImgChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"img2\",\n      value: this.state.img2,\n      onChange: this.handleTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"img3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Image3: \", React.createElement(\"span\", {\n      className: \"require\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"* \")), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"img3file\",\n      key: this.state.img3fileKey,\n      onChange: this.handleImgChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"img3\",\n      value: this.state.img3,\n      onChange: this.handleTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"gitUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"GitHub Url \", React.createElement(\"span\", {\n      className: \"require\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"gitUrl\",\n      value: this.state.gitUrl,\n      onChange: this.handleTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"require\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"*\"), \" - required fields\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, this.getCorrectButton(), React.createElement(\"a\", {\n      href: \"/admin\",\n      role: \"button\",\n      className: \"btn btn-warning pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Nazaj\")))))));\n  }\n\n}\n\nexport default NewProject;","map":{"version":3,"sources":["C:/Users/SpelaRK/js_programming/ReactJS/urban-kravos/src/components/new-project.component.jsx"],"names":["React","Component","useParams","NewProject","constructor","props","handleImgChange","event","target","files","name","setState","loaded","formData","FormData","append","options","method","body","fetch","then","res","text","data","inputsName","slice","handleTextChange","value","handleAddProject","state","tittle","postBody","img1","img2","img3","gitUrl","JSON","stringify","headers","console","log","status","img1fileKey","Date","now","img2fileKey","img3fileKey","alert","error","Error","catch","err","handleEditProject","match","params","id","componentDidMount","json","_id","getNewProjectButton","getEditProjectButton","getCorrectButton","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nclass NewProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tittle: '',\r\n      postBody: '',\r\n      img1: '',\r\n      img2: '',\r\n      img3: '',\r\n      gitUrl: 'https://github.com/radicalb/',\r\n      img1fileKey: 'rKey1' + Date.now(),\r\n      img2fileKey: 'rKey2' + Date.now(),\r\n      img3fileKey: 'rKey3' + Date.now()\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match);\r\n    console.log(this.props.match.params);\r\n    if (this.props.match.params.id) {\r\n      fetch('/api/project/' + this.props.match.params.id)\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            res.json().then(data => {\r\n              console.log(data);\r\n              const { _id } = data;\r\n              console.log(_id);\r\n\r\n              this.setState({\r\n                tittle: data.tittle,\r\n                postBody: data.postBody,\r\n                img1: data.img1,\r\n                img2: data.img2,\r\n                img3: data.img3,\r\n                gitUrl: data.gitUrl\r\n              });\r\n            });\r\n          } else {\r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  getNewProjectButton() {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-success\"\r\n        onClick={this.handleAddProject}\r\n      >\r\n        Dodaj projekt\r\n      </button>\r\n    );\r\n  }\r\n\r\n  getEditProjectButton() {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-success\"\r\n        onClick={this.handleEditProject}\r\n      >\r\n        Shrani spremembe\r\n      </button>\r\n    );\r\n  }\r\n\r\n  getCorrectButton() {\r\n    if (this.props.match.params.id) {\r\n      return this.getEditProjectButton();\r\n    } else {\r\n      return this.getNewProjectButton();\r\n    }\r\n  }\r\n\r\n  handleImgChange = event => {\r\n    const { files, name } = event.target;\r\n\r\n    //za load bar, če bom rabil\r\n    this.setState({\r\n      loaded: 0\r\n    });\r\n\r\n    const formData = new FormData();\r\n    formData.append('pFile', files[0]);\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      body: formData\r\n    };\r\n\r\n    fetch('/api/project/upload', options)\r\n      .then(res => {\r\n        return res.text();\r\n      })\r\n      .then(data => {\r\n        const inputsName = name.slice(0, 4);\r\n        this.setState({\r\n          [inputsName]: data\r\n        });\r\n      });\r\n  };\r\n\r\n  handleTextChange = event => {\r\n    const { value, name } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleAddProject = () => {\r\n    const { tittle, postBody, img1, img2, img3, gitUrl } = this.state;\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      body: JSON.stringify({ tittle, postBody, img1, img2, img3, gitUrl }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    fetch('/api/project/add', options)\r\n      .then(res => {\r\n        console.log('RESPONSE FROM SERVER:');\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            tittle: '',\r\n            postBody: '',\r\n            img1: '',\r\n            img2: '',\r\n            img3: '',\r\n            gitUrl: 'https://github.com/radicalb/',\r\n            img1fileKey: 'rKey1' + Date.now(),\r\n            img2fileKey: 'rKey2' + Date.now(),\r\n            img3fileKey: 'rKey3' + Date.now()\r\n          });\r\n          alert('Projekt uspešno dodan.');\r\n        } else {\r\n          const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        alert('Error adding project please try again');\r\n      });\r\n  };\r\n\r\n  handleEditProject = () => {\r\n    const { tittle, postBody, img1, img2, img3, gitUrl } = this.state;\r\n\r\n    const options = {\r\n      method: 'POST',\r\n      body: JSON.stringify({ tittle, postBody, img1, img2, img3, gitUrl }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    fetch('/api/project/update/' + this.props.match.params.id, options)\r\n      .then(res => {\r\n        console.log('RESPONSE FROM SERVER:');\r\n        if (res.status === 200) {\r\n          alert('Projekt uspešno posodobljen.');\r\n        } else {\r\n          const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        alert('Error updating project please try again');\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"page-section portfolio\" id=\"newProject\">\r\n        <div className=\"container\">\r\n          <h2 className=\"page-section-heading text-center text-uppercase text-secondary mb-0\">\r\n            Dodaj projekt\r\n          </h2>\r\n\r\n          <div className=\"divider-custom\">\r\n            <div className=\"divider-custom-line\"></div>\r\n            <div className=\"divider-custom-icon\">\r\n              <i className=\"fas fa-star\"></i>\r\n            </div>\r\n            <div className=\"divider-custom-line\"></div>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8 col-md-offset-2 text-left\">\r\n              <form action=\"\" method=\"POST\">\r\n                <div className=\"form-group\">\r\n                  <label for=\"tittle\">\r\n                    Title <span className=\"require\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"tittle\"\r\n                    value={this.state.tittle}\r\n                    onChange={this.handleTextChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label for=\"postBody\">Description</label>\r\n                  <textarea\r\n                    rows=\"5\"\r\n                    className=\"form-control\"\r\n                    name=\"postBody\"\r\n                    value={this.state.postBody}\r\n                    onChange={this.handleTextChange}\r\n                  ></textarea>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label for=\"img1\">\r\n                    Image1: <span className=\"require\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"img1file\"\r\n                    key={this.state.img1fileKey}\r\n                    onChange={this.handleImgChange}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"img1\"\r\n                    value={this.state.img1}\r\n                    onChange={this.handleTextChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label for=\"img2\">\r\n                    Image2: <span className=\"require\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"img2file\"\r\n                    key={this.state.img2fileKey}\r\n                    onChange={this.handleImgChange}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"img2\"\r\n                    value={this.state.img2}\r\n                    onChange={this.handleTextChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label for=\"img3\">\r\n                    Image3: <span className=\"require\">* </span>\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"img3file\"\r\n                    key={this.state.img3fileKey}\r\n                    onChange={this.handleImgChange}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"img3\"\r\n                    value={this.state.img3}\r\n                    onChange={this.handleTextChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label for=\"gitUrl\">\r\n                    GitHub Url <span className=\"require\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"gitUrl\"\r\n                    value={this.state.gitUrl}\r\n                    onChange={this.handleTextChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <p>\r\n                    <span className=\"require\">*</span> - required fields\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  {this.getCorrectButton()}\r\n                  <a\r\n                    href=\"/admin\"\r\n                    role=\"button\"\r\n                    className=\"btn btn-warning pull-right\"\r\n                  >\r\n                    Nazaj\r\n                  </a>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewProject;\r\n"]},"metadata":{},"sourceType":"module"}