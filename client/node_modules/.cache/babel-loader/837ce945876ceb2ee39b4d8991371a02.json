{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpelaRK\\\\js_programming\\\\ReactJS\\\\urban-kravos\\\\src\\\\components\\\\withAuth.jsx\";\n// withAuth.jsx\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default function withAuth(ComponentToProtect, redirectTo) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false\n      };\n    }\n\n    componentDidMount() {\n      fetch('/api/users/checkToken').then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          loading: false,\n          redirect: true\n        });\n      });\n    }\n\n    render() {\n      const _this$state = this.state,\n            loading = _this$state.loading,\n            redirect = _this$state.redirect;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        let loginUrl = '/login' + redirectTo;\n        return React.createElement(Redirect, {\n          to: loginUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ComponentToProtect, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n\n  };\n}","map":{"version":3,"sources":["C:/Users/SpelaRK/js_programming/ReactJS/urban-kravos/src/components/withAuth.jsx"],"names":["React","Component","Redirect","withAuth","ComponentToProtect","redirectTo","constructor","state","loading","redirect","componentDidMount","fetch","then","res","console","log","status","setState","error","Error","catch","err","render","loginUrl","props"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsCC,UAAtC,EAAkD;AAC/D,SAAO,cAAcJ,SAAd,CAAwB;AAC7BK,IAAAA,WAAW,GAAG;AACZ;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OAAb;AAID;;AACDC,IAAAA,iBAAiB,GAAG;AAClBC,MAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIA,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAKC,QAAL,CAAc;AAAET,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAFD,MAEO;AACL,gBAAMU,KAAK,GAAG,IAAIC,KAAJ,CAAUN,GAAG,CAACK,KAAd,CAAd;AACA,gBAAMA,KAAN;AACD;AACF,OATH,EAUGE,KAVH,CAUSC,GAAG,IAAI;AACZP,QAAAA,OAAO,CAACI,KAAR,CAAcG,GAAd;AACA,aAAKJ,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACD,OAbH;AAcD;;AACDa,IAAAA,MAAM,GAAG;AAAA,0BACuB,KAAKf,KAD5B;AAAA,YACCC,OADD,eACCA,OADD;AAAA,YACUC,QADV,eACUA,QADV;;AAEP,UAAID,OAAJ,EAAa;AACX,eAAO,IAAP;AACD;;AACD,UAAIC,QAAJ,EAAc;AACZ,YAAIc,QAAQ,GAAG,WAAWlB,UAA1B;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAEkB,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD,oBAAwB,KAAKC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;AAtC4B,GAA/B;AAwCD","sourcesContent":["// withAuth.jsx\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function withAuth(ComponentToProtect, redirectTo) {\r\n  return class extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      fetch('/api/users/checkToken')\r\n        .then(res => {\r\n          console.log(res);\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({ loading: false, redirect: true });\r\n        });\r\n    }\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect) {\r\n        let loginUrl = '/login' + redirectTo;\r\n        return <Redirect to={loginUrl} />;\r\n      }\r\n      return (\r\n        <React.Fragment>\r\n          <ComponentToProtect {...this.props} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}